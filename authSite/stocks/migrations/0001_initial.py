# Generated by Django 3.0.6 on 2020-05-08 16:58

import datetime
from django.db import migrations, models
import django.db.models.deletion
import stocks.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('country_name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now)),
                ('ingredient_name', models.CharField(max_length=60, unique=True)),
                ('category_type', models.CharField(choices=[(stocks.models.Categories['PROTEIN'], 'Protein'), (stocks.models.Categories['MILK_SUBSTITUTE'], 'Milk Substitute'), (stocks.models.Categories['PASTE'], 'Paste'), (stocks.models.Categories['SWEETENER'], 'Sweetener'), (stocks.models.Categories['OIL'], 'Oil'), (stocks.models.Categories['FRUIT'], 'Fruit')], max_length=60)),
                ('ingredient_shelf_life_months', models.IntegerField(null=True)),
                ('country_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now)),
                ('stock_name', models.CharField(max_length=60, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now)),
                ('provider_name', models.CharField(max_length=60)),
                ('sold', models.BooleanField(null=True)),
                ('provider_type', models.CharField(choices=[(stocks.models.ProviderType['PROD'], 'Producer'), (stocks.models.ProviderType['SUPP'], 'Supplier'), (stocks.models.ProviderType['PROD_SUPP'], 'Producer and Supplier')], max_length=60)),
                ('contact_name', models.CharField(max_length=60)),
                ('email', models.CharField(max_length=60)),
                ('website', models.CharField(max_length=60)),
                ('phone_number', models.CharField(max_length=60)),
                ('address', models.CharField(max_length=60)),
                ('country_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.Country')),
            ],
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(default=datetime.datetime.now)),
                ('price_flat', models.FloatField(null=True)),
                ('price_currency', models.CharField(choices=[(stocks.models.Currencies['USD'], 'USD'), (stocks.models.Currencies['EUR'], 'EUR'), (stocks.models.Currencies['PLN'], 'PLN')], max_length=60)),
                ('unit', models.CharField(choices=[(stocks.models.Units['KG'], 'KG'), (stocks.models.Units['LB'], 'LB'), (stocks.models.Units['MT'], 'MT'), (stocks.models.Units['LT'], 'LT')], max_length=60)),
                ('price_per_unit', models.FloatField(null=True)),
                ('incoterm', models.CharField(max_length=60, null=True)),
                ('packaging', models.CharField(max_length=60, null=True)),
                ('prime_cost', models.FloatField(null=True)),
                ('prime_cost_currency', models.CharField(choices=[(stocks.models.Currencies['USD'], 'USD'), (stocks.models.Currencies['EUR'], 'EUR'), (stocks.models.Currencies['PLN'], 'PLN')], default=stocks.models.Currencies['PLN'], max_length=60)),
                ('ingredient_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.Ingredient')),
            ],
        ),
        migrations.CreateModel(
            name='NutrionalValue',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('protein_content', models.CharField(max_length=60, null=True)),
                ('production_type', models.CharField(max_length=60, null=True)),
                ('fat_content', models.CharField(max_length=60, null=True)),
                ('additives', models.CharField(max_length=60, null=True)),
                ('soluble', models.BooleanField(null=True)),
                ('liquid', models.BooleanField(null=True)),
                ('powder', models.BooleanField(null=True)),
                ('roasted', models.BooleanField(null=True)),
                ('natural', models.BooleanField(null=True)),
                ('state', models.CharField(max_length=60, null=True)),
                ('fineness', models.CharField(max_length=60, null=True)),
                ('process_type', models.CharField(max_length=60, null=True)),
                ('ingredient_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='stocks.Ingredient')),
            ],
        ),
        migrations.AddField(
            model_name='ingredient',
            name='provider_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.Provider'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='stock_id',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='stocks.Stock'),
        ),
    ]
